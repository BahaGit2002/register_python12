name: Master CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python with Poetry
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        pip install poetry
        poetry install

    - name: Install dependencies
      run: |
        poetry install

    - name: Set Environment Variables
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
        echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> $GITHUB_ENV
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> $GITHUB_ENV
        echo "DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }}" >> $GITHUB_ENV

#    - name: Install Dependencies
#      run: |
#        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#        docker-compose up -d --build
    - name: Run Tests
      run: |
        source /home/runner/.cache/pypoetry/virtualenvs/register_user-eQmeQk-R-py3.11/bin/activate  # Activate the virtual environment
        poetry run python manage.py makemigrations
        poetry run python manage.py migrate  # Apply migrations
        poetry run python manage.py test