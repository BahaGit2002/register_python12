name: Master CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python with Poetry
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        pip install poetry
        poetry install

    - name: Install dependencies
      run: |
        poetry install

    - name: Create .env file

      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env

    - name: Set Environment Variables
      run: |
        source .env

    - name: Run Tests
      run: |
          ls -la  # Check the directory structure
          VENV_PATH=$(poetry env info -p)
          echo "Virtual Environment Path: $VENV_PATH"
          source "$VENV_PATH/bin/activate"  # Activate the virtual environment
          poetry run python manage.py makemigrations
          poetry run python manage.py migrate
          poetry run python manage.py test